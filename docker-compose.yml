version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  dotnet-api:
    container_name: dotnet-api
    build:
      context: .
      dockerfile: TechChallenge.API/Dockerfile
    ports:
      - "7165:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - monitoring
      - app-network
    depends_on:
      - rabbitmq

  test-runner:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: test-runner
    volumes:
      - .:/app
    working_dir: /app
    environment:
      API_BASE_URL: "http://dotnet-api:80"
    networks:
      - monitoring
    depends_on:
      - dotnet-api
    command: >
      sh -c "dotnet restore &&
             dotnet test ./TechChallenge.API.sln --configuration Release --verbosity normal --logger trx"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    depends_on:
      - dotnet-api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring
    depends_on:
      - prometheus

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: db
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "MinhaSenhaForte123!"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -U sa -P 'MinhaSenhaForte123!' -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "1433:1433"
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host

networks:
  monitoring:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  grafana-storage:
    driver: local